{
	"name": "pipeline_customer_dataflow",
	"properties": {
		"activities": [
			{
				"name": "customerdataflow",
				"type": "ExecuteDataFlow",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "customerdataflow",
						"type": "DataFlowReference"
					},
					"staging": {
						"linkedService": {
							"referenceName": "stage_plybase",
							"type": "LinkedServiceReference"
						},
						"folderPath": "stage"
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					}
				}
			},
			{
				"name": "Sucess_email_notification",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "customerdataflow",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "email_notification",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"DataFactoryName": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						},
						"Message": "Pipeline successfully completed."
					}
				}
			},
			{
				"name": "Failure_email_notification",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "customerdataflow",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "email_notification",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"DataFactoryName": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						},
						"Message": {
							"value": "@activity('customerdataflow').Error.Message",
							"type": "Expression"
						}
					}
				}
			}
		],
		"folder": {
			"name": "Demo"
		},
		"annotations": []
	}
}