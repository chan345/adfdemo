{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "chandraadf123"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/input_transaction')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Transactions.csv",
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "transaction_id",
						"type": "String"
					},
					{
						"name": "cust_id",
						"type": "String"
					},
					{
						"name": "tran_date",
						"type": "String"
					},
					{
						"name": "prod_subcat_code",
						"type": "String"
					},
					{
						"name": "prod_cat_code",
						"type": "String"
					},
					{
						"name": "Qty",
						"type": "String"
					},
					{
						"name": "Rate",
						"type": "String"
					},
					{
						"name": "Tax",
						"type": "String"
					},
					{
						"name": "total_amt",
						"type": "String"
					},
					{
						"name": "Store_type",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/transactions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Transaction_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "customer_Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "transaction_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "tran_date",
						"type": "date"
					},
					{
						"name": "prod_subcat_code",
						"type": "int",
						"precision": 10
					},
					{
						"name": "prod_cat_code",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Qty",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Rate",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tax",
						"type": "int",
						"precision": 10
					},
					{
						"name": "total_amt",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Store_type",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Transactions"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/transacation_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "demo"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "input_transaction",
								"type": "DatasetReference"
							},
							"name": "Transacation"
						},
						{
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsTable1",
								"type": "DatasetReference"
							},
							"name": "lkpcustomer"
						},
						{
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsTable1",
								"type": "DatasetReference"
							},
							"name": "incremental"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "transactions",
								"type": "DatasetReference"
							},
							"name": "transaction"
						}
					],
					"transformations": [
						{
							"name": "datatypechange"
						},
						{
							"name": "Lookupcustomer"
						},
						{
							"name": "incrementaljoin"
						},
						{
							"name": "Filterdata"
						}
					],
					"script": "source(output(\n\t\ttransaction_id as long,\n\t\tcust_id as integer,\n\t\ttran_date as string,\n\t\tprod_subcat_code as short,\n\t\tprod_cat_code as short,\n\t\tQty as short,\n\t\tRate as short,\n\t\tTax as double,\n\t\ttotal_amt as double,\n\t\tStore_type as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tlimit: 0) ~> Transacation\nsource(output(\n\t\tD_KEY as integer,\n\t\tcustomer_Id as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select D_KEY,customer_Id from D_customer',\n\tformat: 'query',\n\tstaged: false) ~> lkpcustomer\nsource(output(\n\t\tSrc_Tab as string,\n\t\tWatermark_Value as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select [Src_Tab],[Watermark_Value] from config',\n\tformat: 'query',\n\tstaged: false) ~> incremental\nTransacation derive(tran_date = toTimestamp(tran_date,'dd-MM-yyyy'),\n\t\tsource_tablename = 'Transactions') ~> datatypechange\nincrementaljoin, lkpcustomer lookup(cust_id == customer_Id,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookupcustomer\ndatatypechange, incremental join(source_tablename == Src_Tab,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> incrementaljoin\nLookupcustomer filter(tran_date > Watermark_Value) ~> Filterdata\nFilterdata sink(input(\n\t\tTransaction_key as integer,\n\t\tcustomer_Key as integer,\n\t\ttransaction_id as integer,\n\t\ttran_date as date,\n\t\tprod_subcat_code as integer,\n\t\tprod_cat_code as integer,\n\t\tQty as integer,\n\t\tRate as integer,\n\t\tTax as integer,\n\t\ttotal_amt as integer,\n\t\tStore_type as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> transaction"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/input_transaction')]",
				"[concat(variables('factoryId'), '/datasets/transactions')]"
			]
		}
	]
}