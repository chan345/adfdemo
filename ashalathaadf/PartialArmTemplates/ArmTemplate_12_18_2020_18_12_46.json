{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ashalathaadf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_flatten')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow_flatten_trans",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_flatten_trans",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_flatten_trans')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_json_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['glossary']['title']"
										},
										"sink": {
											"ordinal": 1
										}
									},
									{
										"source": {
											"path": "$['glossary']['GlossDiv']['title']"
										},
										"sink": {
											"ordinal": 2
										}
									},
									{
										"source": {
											"path": "$['glossary']['GlossDiv']['GlossList']['GlossEntry']['ID']"
										},
										"sink": {
											"ordinal": 3
										}
									},
									{
										"source": {
											"path": "$['glossary']['GlossDiv']['GlossList']['GlossEntry']['SortAs']"
										},
										"sink": {
											"ordinal": 4
										}
									},
									{
										"source": {
											"path": "$['glossary']['GlossDiv']['GlossList']['GlossEntry']['GlossTerm']"
										},
										"sink": {
											"ordinal": 5
										}
									},
									{
										"source": {
											"path": "$['glossary']['GlossDiv']['GlossList']['GlossEntry']['Acronym']"
										},
										"sink": {
											"ordinal": 6
										}
									},
									{
										"source": {
											"path": "$['glossary']['GlossDiv']['GlossList']['GlossEntry']['Abbrev']"
										},
										"sink": {
											"ordinal": 7
										}
									},
									{
										"source": {
											"path": "$['glossary']['GlossDiv']['GlossList']['GlossEntry']['GlossDef']['para']"
										},
										"sink": {
											"ordinal": 8
										}
									},
									{
										"source": {
											"path": "$['glossary']['GlossDiv']['GlossList']['GlossEntry']['GlossDef']['GlossSeeAlso']"
										},
										"sink": {
											"ordinal": 9
										}
									},
									{
										"source": {
											"path": "$['glossary']['GlossDiv']['GlossList']['GlossEntry']['GlossSee']"
										},
										"sink": {
											"ordinal": 10
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "json_example",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "country_file",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/json_example')]",
				"[concat(variables('factoryId'), '/datasets/country_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_merge_copyactivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.txt",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": "merge.txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "country_file",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "outfile",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/country_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json_book')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "book.json",
						"fileSystem": "input"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"name": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"locale": {
										"type": "string"
									},
									"value": {
										"type": "string"
									}
								}
							}
						},
						"description": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"locale": {
										"type": "string"
									},
									"value": {
										"type": "string"
									}
								}
							}
						},
						"authorInfos": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"name": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"locale": {
													"type": "string"
												},
												"value": {
													"type": "string"
												}
											}
										}
									},
									"role": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"locale": {
													"type": "string"
												},
												"value": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						},
						"textLanguage": {
							"type": "string"
						},
						"keywords": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"locale": {
										"type": "string"
									},
									"value": {
										"type": "string"
									}
								}
							}
						},
						"textbook": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"locale": {
										"type": "string"
									},
									"value": {
										"type": "string"
									}
								}
							}
						},
						"bestSeller": {
							"type": "string"
						},
						"coverImage": {
							"type": "object",
							"properties": {
								"renditions": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"mediaFormat": {
												"type": "string"
											},
											"url": {
												"type": "string"
											},
											"altText": {
												"type": "string"
											},
											"mimeType": {
												"type": "string"
											}
										}
									}
								}
							}
						},
						"newToEdition": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"locale": {
										"type": "string"
									},
									"value": {
										"type": "string"
									}
								}
							}
						},
						"whatsNew": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"locale": {
										"type": "string"
									},
									"value": {
										"type": "string"
									}
								}
							}
						},
						"tableOfContents": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"locale": {
										"type": "string"
									},
									"value": {
										"type": "string"
									}
								}
							}
						},
						"subjectIds": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"courseIds": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"brandIds": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"webLinks": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"type": {
										"type": "string"
									},
									"url": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/country_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "output"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/json_example')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "example_2.json",
						"fileSystem": "input"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Name": {
							"type": "string"
						},
						"title": {
							"type": "string"
						},
						"product": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"Address": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"loc": {
										"type": "string"
									},
									"state": {
										"type": "string"
									},
									"country": {
										"type": "string"
									}
								}
							}
						},
						"contact": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"pincode": {
										"type": "string"
									},
									"mobile": {
										"type": "string"
									},
									"phone": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/jsontocsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_flatten_trans')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "json_example",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "country_file",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Flatten2"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\ttitle as string,\n\t\tproduct as string[],\n\t\tAddress as (loc as string, state as string, country as string)[],\n\t\tcontact as (pincode as string, mobile as string, phone as string)[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'singleDocument') ~> source1\nsource1 foldDown(unroll(Address),\n\tmapColumn(\n\t\tName,\n\t\ttitle,\n\t\tproduct,\n\t\tloc = Address.loc,\n\t\tstate = Address.state,\n\t\tcountry = Address.country,\n\t\tcontact\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten2\nFlatten2 sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['flatten.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/json_example')]",
				"[concat(variables('factoryId'), '/datasets/country_file')]"
			]
		}
	]
}